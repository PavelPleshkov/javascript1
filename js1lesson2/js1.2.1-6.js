'use strict';

/*
1. Объясните почему код даёт именно такие результаты?
*/
//пример 1
//префиксная форма инкремента сначала увеличивает значение a до 2,
//затем с присваивается значение 2 
let a = 1, b = 1, c, d;
c = ++a;
alert(c); // ответ: 2

//пример 2
//при поствиксной форме инкремента b сначала d присваивается значение b равное 1,
//далее b увеличивается на 1 и становится 2, но d остается 1
d = b++;
alert(d); //ответ: 1

//пример 3
//инкремент a увеличивает a на 1, получается 2 + 1 = 3,
//далее с = 2 + 3 = 5
c = 2 + ++a;
alert(c); //ответ: 5

//пример 4
//предыдущее значение b из примера 2 равно 2, d присваиветсязначение 2+2=4,
//после чего b увеличивается с 2 до 3
d = 2 + b++;
alert(d); //ответ: 4

//------------------------------------------------------------------------------

/*
2. Чему будут равны переменные x и a в примере ниже? Написать почему так произошло
(описать последовательность действий).
*/
//наивысший приоритет у скобок, следовантельно:
// a *= 2
// при a = 2 получается a = a * 2 = 2 * 2 = 4
// далее x = 1 + 4 = 5
// итого a = 4, x = 5
let a = 2;
let x = 1 + (a *= 2);

//------------------------------------------------------------------------------

/*
3. Объявить две переменные a и b и задать им целочисленные произвольные начальные
значения.
Затем написать скрипт, который работает по следующему принципу:
- если a и b положительные, вывести их разность (ноль можно считать положительным числом);
- если а и b отрицательные, вывести их произведение;
- * (этот пункт по сложнее, делайте по желанию) если а и b разных знаков, вывести их сумму;
*/

let a = Math.round(prompt('Enter integer a: ', 3)),
    b = Math.round(prompt('Enter integer b: ', -5)),
    result;
if ((a >= 0) && (b >= 0)) {
    // result = a - b;
    alert(`${a} - ${b} = ${a - b}`);
} else if ((a < 0) && (b < 0)) {
    // result = a * b;
    alert(`(${a}) * (${b}) = ${a * b}`);
} else if ((a >= 0) && (b < 0)) {
    // result = a + b;
    alert(`${a} + (${b}) = ${a + b}`);
} else if ((a < 0) && (b >=0)) {
    alert(`(${a}) + ${b} = ${a + b}`);
}

//либо вместо последних 2х:
//} else if ((a >= 0) && (b < 0) || (a < 0) && (b >=0)) {
//     alert(`a + b = ${a + b}`)
// }

// или
// } else if (a >= 0 && b < 0 || a < 0 && b >=0)
//     alert(`a + b = ${a + b}`)
// }

//------------------------------------------------------------------------------

/*
4. Реализовать основные 4 арифметические операции (+, -, /, *) в виде функций с двумя
параметрами.
Обязательно использовать оператор return.
*/

'use strict';

alert('Сумма введенных чисел:\n' + sum(+prompt('Введите 1-ое число:', 5), +prompt('Введите 2-ое число:', 2)));
alert('Произведение введенных чисел:\n' + multiply(+prompt('Введите 1-ое число:', 5), +prompt('Введите 2-ое число:', 2)));
alert('Частное от деления:\n' + division(+prompt('Введите 1-ое число:', 5), +prompt('Введите 2-ое число:', 2)));
alert('Разность:\n' + subtraction(+prompt('Введите 1-ое число:', 5), +prompt('Введите 2-ое число:', 2)));

function sum (num1, num2) {
    return num1 + num2;
}

function multiply (num3, num4) {
    return num3 * num4;
}

function division (num5, num6) {
    return num5 / num6;
}

function subtraction (num7, num8) {
    return num7 - num8;
}

//------------------------------------------------------------------------------

/*
5. Реализовать функцию с тремя параметрами: function mathOperation(arg1, arg2, operation),
где arg1, arg2 – значения аргументов, operation – строка с названием операции. В зависимости от
переданного значения операции (использовать switch) выполнить одну из арифметических
операций
(использовать функции из задания 4) и вернуть полученное значение.
*/

'use strict';

do {
    console.log(mathOperation());
} while (confirm('Заново?'));

/*
Здравствуйте, Игорь!
Подскажите, пожалуйста, в описании функции для типа @param нужно указывать
значение, котрое задается согласно программе, например при prompt - это первоначально string
или тип, который логически должен человек или программа воспринимать как исходный аргумент,
здесь это будет уже number???

Т.е. для нашей функции как правильно? 
@param {string} arg1
или
@param {number} arg1

Спасибо!
*/

/**
 * Функция - простой калькулятор. 
 * Принимает два числа и операцию над ними,
 * выдает сообщение со значением результата операции в окно 
 * и возвращает результат в консоль 
 *
 * @param {any} arg1 значение первого числа
 * @param {any} arg2 значение второго числа
 * @param {string} operation математическая операция + - * /
 */
function mathOperation(arg1, arg2, operation) {
    arg1 = prompt('Введите 1-ое число:', '');
    arg2 = prompt('Введите 2-ое число:', '');

    // Условия для исключения ввода пробела/пробелов ' '/'   ', букв, пустой строки
    // и для возможности ввести значение '0', 
    //
    // т.к. условие +('') == 0  --> true, а parseFloat('') == 0 --> false
    //
    // при использовании унарного + для преобразования, пустая строка и пробелы
    // преобразуются в 0 и расчет все равно выполняется
    //
    // и наоборот для 0      parseFloat(arg1) == 0 --> true
    if ((+arg1 || parseFloat(arg1) == 0) && (+arg2 || parseFloat(arg2) == 0)) {
        // arg1 = parseFloat(arg1);
        // arg2 = parseFloat(arg2);
        arg1 = +arg1;
        arg2 = +arg2;
        
        operation = prompt(`Введите математическую операцию (+, -, *, /) для чисел ${arg1} и ${arg2}:`, '+');
        switch (operation) {
            case '+':
                alert(`Результат вычислений:\n ${arg1} ${operation} ${arg2} = ${sum(arg1, arg2)}`);
                return sum(arg1, arg2);
                break;
            case '-':
                alert(`Результат вычислений:\n ${arg1} ${operation} ${arg2} = ${subtraction(arg1, arg2)}`);
                return subtraction(arg1, arg2);
                break;
            case '*':
                alert(`Результат вычислений:\n ${arg1} ${operation} ${arg2} = ${multiply(arg1, arg2)}`);
                return multiply(arg1, arg2);
                break;
            case '/':
                alert(`Результат вычислений:\n ${arg1} ${operation} ${arg2} = ${division(arg1, arg2)}`);
                return division(arg1, arg2);
                break;

            default:
                if (confirm('Вы ввели недопустимую операцию!\n\nНачнете сначала?')) {
                    mathOperation();
                }
        }

    } else {
        if (confirm('Необходимо вводить числа!\n\nПовторите попытку?')) {
            mathOperation();
        } 
    }
}

/**
 *Функция для сложения двух чисел
 *
 * @param {number} num1 первое число
 * @param {number} num2 второе число
 * @returns сумма чисел
 */
function sum (num1, num2) {
    return num1 + num2;
}

/**
 *Функция для умножения двух чисел
 *
 * @param {number} num3 первое число
 * @param {number} num4 второе число
 * @returns произведение чисел
 */
function multiply (num3, num4) {
    return num3 * num4;
}

/**
 *Функция для деления 1-го числа на 2-ое
 *
 * @param {number} num5 первое число
 * @param {number} num6 второе число
 * @returns 
 */
function division (num5, num6) {
    return num5 / num6;
}

/**
 *Функция для вычитания из 1-го числа 2-го
 *
 * @param {number} num7 первое число
 * @param {number} num8 второе число
 * @returns разность num7 - num8
 */
function subtraction (num7, num8) {
    return num7 - num8;
}

//------------------------------------------------------------------------------

/*
6. (Очень сложное задание, требует времени и гугления, по желанию.) 
Программа должна спросить у пользователя количество денег, 
которое он хочет положить в банк. Пользователь должен ввести целое число,
а программа должна выдать соответствующее сообщение:
"Ваша сумма в 101 рубль успешно зачислена." - в случае если пользователь ввел 101.
"Ваша сумма в 10020 рублей успешно зачислена." - в случае если пользователь ввел 10020.
"Ваша сумма в 120104 рубля успешно зачислена." - в случае если пользователь ввел 120104.
Если пользователь введет любое другое целое число, программа также должна выдать
соответствующее сообщение, в котором будет отображено это число, а также поставить верное
окончание в слове "рубль". Для получения верного склонения слова (любого слова с числом) 
вам необходимо создать функцию
*/

'use strict';

do {
    let cash = String(parseInt(prompt('Сумма вклада', 101)));
    if (cash == 0) {
        alert('Обычно на вклад нужно что-то класть...');
    } else {
        alert(`Ваша сумма в ${cash} ${transformWord(cash)} успешно зачислена.`);
    }
} while (confirm('Еще один вклад?'));


/**
 *Функция принимает в качестве аргумента значение, введенное пользователем,
 *и возвращает слово "рубль" в подходящем склонении
 *
 * @param {string} str Целое число
 * @returns {string} Слово "рубль" в подходящем склонении
 */
function transformWord (str) {
    let lastChar = str.charAt(str.length - 1),
        preLastChar = str.charAt(str.length - 2),
        word;

    if (preLastChar != 1) {
        switch (lastChar) {
                case '1':
                    word = 'рубль';
                    break;
                case '2':
                case '3':
                case '4':
                    word = 'рубля';
                    break;
                case '5':
                case '6':
                case '7':
                case '8':
                case '9':
                case '0':
                    word = 'рублей';
                    break;

                default:
                    break;
            }
    } else {
        word = 'рублей';
    }

    return word;
}